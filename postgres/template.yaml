apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: postgres-aurora
  title: Create postgres aurora AWS
  description: Template postress aurora
  tags: 
    - plataforma
spec:
  owner: sre
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - kubernetes_cluster
        - namespace
        - postgres_cluster
      properties:
        kubernetes_cluster:
          title: Name Kubernetes Cluster
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        namespace:
          title: Namespace Cluster
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        postgres_cluster:
          title: Postgres Cluster Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        owner:
          title: Application Owner
          type: string
          description: Github team that owns the repository
          ui:field: OwnerPicker
          ui:options:
            allowedKnds:
              - Group
        teste:
          title: TESTE
          type: string
          ui:field: SelectFieldFromApi
          ui:options:
            title: My Dropdown title
            description: My custom description for the component

            # The Path on the Backstage API and the parameters to fetch the data for the dropdown
            path: 'catalog/entity-facets'
            params:
              facet: 'kind'

            # This selects the array element from the API fetch response. It finds the array with the name kind
             # under the facets object
            arraySelector: 'facets.kind'

            # (Optional) This selects the field in the array to use for the value of each select item. If its not specified
            # it will use the value of the item directly.
            valueSelector: 'count'
            # (Optional) This selects the field in the array to use for the label of each select item.
            labelSelector: 'value'
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{parameters.name}}

    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./community
        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        title: "Create new project: ${{parameters.name}}"
        branchName: create-${{parameters.name}}
        description: |
          # New project: ${{parameters.name}}

          ${{ parameters.description if parameters.description }}
        targetPath: ${{ parameters.targetPath if parameters.targetPath else parameters.name }}

  output:
    links:
      - url: ${{steps.publish.output.remoteUrl}}
        text: "Go to PR"